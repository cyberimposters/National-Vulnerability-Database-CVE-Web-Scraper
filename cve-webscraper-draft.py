#!/usr/bin/python3

import tkinter as tk
from tkinter import simpledialog
from tkinter import *
from tkinter import filedialog
import bs4
import requests
#import pandas
import os

ROOT = tk.Tk()
ROOT.withdraw()
# the input dialog
USER_INP = simpledialog.askstring(title="Risk Selection",
                                  prompt="Type 'NIST' for the NIST Score or 'CNA' for the Vendor Risk Score:")
# lowercase input for "case insensitive" input
user_inp_case = USER_INP.lower()

print("You input" + " '" + user_inp_case + "'.")

if user_inp_case == "nist":

  def openFile():
      tf = filedialog.askopenfilename(
          initialdir="/", 
          title="Open Text file", 
          filetypes=(("Text Files", "*.txt"),)
          )
      pathh.insert(END, tf)
      tf = open(tf)  # or tf = open(tf, 'r')
      data = tf.read()
      txtarea.insert(END, data)
    #tf.close()

      filepath = os.path.abspath(tf.name) 
      tf = open(filepath) # this is the CVE list file
      output = open('nist_out.txt' , 'a') # this is a results output file 'append to file'
      lines = tf.readline() 


      for lines in tf: # example of using for-loop to read line-by-line from a given file
        html = "https://nvd.nist.gov/vuln/detail/"
        webpage = requests.get(html + lines.strip())
        soup = bs4.BeautifulSoup(webpage.text, "html.parser")
        #content_box = soup.find(id="Cvss3CnaCalculatorAnchor") or soup.find(id="Cvss3NistCalculatorAnchor") # looks for CNA or NIST calc scores
        content_box = soup.find(id="Cvss3NistCalculatorAnchor")
        #this is the vulnerability description
        details_box = soup.find(attrs={'data-testid':'vuln-description'}) or soup.find(attrs={'data-testid':'service-unavailable-msg'})

        while content_box:
          content = content_box.text
          details_box = soup.find(attrs={'data-testid':'vuln-description'})
          details = details_box.text
          print(lines + "\nNIST Risk Score: " + content)
          print("\nDetails: " + details)
          print(lines.strip("\n") + " " + content + " " + "Details: " + details, file = output)
          print("----------\n")
          break

        else: #ratings attribute is empty
          html = "https://nvd.nist.gov/vuln/detail/"
          webpage = requests.get(html + lines.strip())
          soup = bs4.BeautifulSoup(webpage.text, "html.parser")
          details_box = soup.find(attrs={'data-testid':'vuln-description'}) or soup.find(attrs={'data-testid':'service-unavailable-msg'})
          details = details_box.text
          print(lines + "\nNIST Risk Score: Not Yet Rated V3.x:(not available) " + "\nDetails: " + details)
          print(lines.strip("\n") + " " + "Not Yet Rated " + "Details: " + details, file = output)
          print("----------\n")
        #break -- remove line frome code (?)

      output.close() # Closes the output file.
      tf.close()

      print ("\nYou have reached then end of your list.") #End of list

      file = open("nist_out.txt", "r")
    #read content of file to string
      data = file.read()
    #get number of occurrences of the substring in the string
      occurrences_nyr = data.count("Not Yet Rated")
      occurrences_critical = data.count("CRITICAL")
      occurrences_high = data.count("HIGH")
      occurrences_medium = data.count("MEDIUM")
      occurrences_low = data.count("LOW")
      print('\nNumber of "Not Yet Rated" :', occurrences_nyr)
      print('Number of "CRITICAL" :', occurrences_critical)
      print('Number of "HIGH" :', occurrences_high)
      print('Number of "MEDIUM" :', occurrences_medium)
      print('Number of "LOW" :', occurrences_low)


  ws = Tk()
  ws.title("NVD NIST Score Checker")
  ws.geometry("400x450")
  ws['bg']='#eeeeee'

  txtarea = Text(ws, width=40, height=20)
  txtarea.pack(pady=20)

  pathh = Entry(ws)
  pathh.pack(side=LEFT, expand=True, fill=X, padx=20)

  Button(
      ws, 
      text="Open File", 
      command=openFile
      ).pack(side=RIGHT, expand=True, fill=X, padx=20)
  Button(
      ws,
      text='Exit',
      command=lambda:ws.destroy()
      ).pack(expand=True)

  ws.mainloop()

elif user_inp_case == "cna":
  def openFile():
      tf = filedialog.askopenfilename(
          initialdir="/", 
          title="Open Text file", 
          filetypes=(("Text Files", "*.txt"),)
          )
      pathh.insert(END, tf)
      tf = open(tf)  # or tf = open(tf, 'r')
      data = tf.read()
      txtarea.insert(END, data)
    #tf.close()

      filepath = os.path.abspath(tf.name) 
      tf = open(filepath) # this is the CVE list file
      output = open('vendor_out.txt' , 'a') # this is a results output file 'append to file'
      lines = tf.readline() 


      for lines in tf: # example of using for-loop to read line-by-line from a given file
        html = "https://nvd.nist.gov/vuln/detail/"
        webpage = requests.get(html + lines.strip())
        soup = bs4.BeautifulSoup(webpage.text, "html.parser")
        #content_box = soup.find(id="Cvss3CnaCalculatorAnchor") or soup.find(id="Cvss3NistCalculatorAnchor") # looks for CNA or NIST calc scores
        content_box = soup.find(id="Cvss3CnaCalculatorAnchor")
        #this is the vulnerability description
        details_box = soup.find(attrs={'data-testid':'vuln-description'}) or soup.find(attrs={'data-testid':'service-unavailable-msg'})

        while content_box:
          content = content_box.text
          details_box = soup.find(attrs={'data-testid':'vuln-description'})
          details = details_box.text
          print(lines + "\nVendor Risk Score: " + content)
          print("\nDetails: " + details)
          print(lines.strip("\n") + " " + content + " " + "Details: " + details, file = output)
          print("----------\n")
          break

        else: #ratings attribute is empty
          html = "https://nvd.nist.gov/vuln/detail/"
          webpage = requests.get(html + lines.strip())
          soup = bs4.BeautifulSoup(webpage.text, "html.parser")
          details_box = soup.find(attrs={'data-testid':'vuln-description'}) or soup.find(attrs={'data-testid':'service-unavailable-msg'})
          details = details_box.text
          print(lines + "\nVendor Risk Score: Not Yet Rated V3.x:(not available) " + "\nDetails: " + details)
          print(lines.strip("\n") + " " + "Not Yet Rated " + "Details: " + details, file = output)
          print("----------\n")
          #break -- remove line frome code (?)

      output.close() # Closes the output file.
      tf.close()

      print ("\nYou have reached then end of your list.") #End of list

      file = open("vendor_out.txt", "r")
      #read content of file to string
      data = file.read()
      #get number of occurrences of the substring in the string
      occurrences_nyr = data.count("Not Yet Rated")
      occurrences_critical = data.count("CRITICAL")
      occurrences_high = data.count("HIGH")
      occurrences_medium = data.count("MEDIUM")
      occurrences_low = data.count("LOW")
      print('\nNumber of "Not Yet Rated" :', occurrences_nyr)
      print('Number of "CRITICAL" :', occurrences_critical)
      print('Number of "HIGH" :', occurrences_high)
      print('Number of "MEDIUM" :', occurrences_medium)
      print('Number of "LOW" :', occurrences_low)


  ws = Tk()
  ws.title("NVD Vendor Score Checker")
  ws.geometry("400x450")
  ws['bg']='#eeeeee'

  txtarea = Text(ws, width=40, height=20)
  txtarea.pack(pady=20)

  pathh = Entry(ws)
  pathh.pack(side=LEFT, expand=True, fill=X, padx=20)

  Button(
      ws, 
      text="Open File", 
      command=openFile
      ).pack(side=RIGHT, expand=True, fill=X, padx=20)
  Button(
      ws,
      text='Exit',
      command=lambda:ws.destroy()
      ).pack(expand=True)

  ws.mainloop()

else:
  print("Your entry was invalid. Please provide one of the following: NIST, nist, CNA, or cna.")
